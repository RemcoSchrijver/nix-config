# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/2698339c-7076-4965-8224-ca38c3116d7c";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/7361-5372";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/b212867a-ef75-43b8-9ebf-510842a9ff7c"; }
    ];

  # Extra drives mounted
  fileSystems."/games" =
    { device = "/dev/disk/by-label/Games";
    };

  fileSystems."/data" =
    { device = "/dev/disk/by-label/Data";
    };

  # Display drivers
  # Enable OpenGL
  hardware.opengl = {
    enable = true;
    driSupport = true;
    driSupport32Bit = true;
  };  
  
  # Load nvidia drivers
  services.xserver.videoDrivers = ["nvidia"];
	
  hardware.nvidia = {
    # Modesetting is required.
    modesetting.enable = true;
   
    # Nvidia powermanagement is experimental and may cause sleep to fail disable if need be.
    powerManagement.enable = false;
    # Nvidia finegrained powermangement only works on Turing or newer cards.
    powerManagement.finegrained = false;

    # Open source kernel module (seems to break steam games maybe?)
    open = false;

    # Enable Nvidia settings menu
    nvidiaSettings = true;

    # Set package, sticking with stable for now.
    package = config.boot.kernelPackages.nvidiaPackages.production;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp14s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
